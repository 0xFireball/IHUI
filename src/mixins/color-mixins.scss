
// Adapted from: https://gist.github.com/kaplas/6424861

// Defining colors ===========================================

$color-names  : '';
$light-colors : '';
$dark-colors  : '';

@mixin def-theme-color($color-name, $light-color, $dark-color) {
  	@if ($color-names != "") and (index($color-names, $color-name) != null) {
  		@warn "Theme color \"" + $color-name + "\" is already defined";
	} @else {
		$color-names:  append($color-names,  $color-name,  comma) !global;
		$light-colors: append($light-colors, $light-color, comma) !global;
		$dark-colors:  append($dark-colors,  $dark-color,  comma) !global;
	}
}

// Outer mixin, in which the content is duplicated with correct
// theme colors ===============================================

$current-color-schema: '';
@mixin theme-colors() {
	$current-color-schema: 'light' !global;
	&.ihui-light {
		@content;
	}

	$current-color-schema: 'dark' !global;
	&.ihui-dark {
		@content;
	}
}

@mixin theme-colors-global() {
	$current-color-schema: 'light' !global;
	.ihui-light & {
		@content;
	}

	$current-color-schema: 'dark' !global;
	.ihui-dark & {
		@content;
	}
}

// Function for retrieving correct color. Remember to use this
// inside the mixin defined above.
// FYI: This is actually just a lookup function ==============


@function theme-color($color-name) {
	@if ($color-names == "") or (index($color-names, $color-name)) == null {
		@warn "Theme color \"" + $color-name + "\" is not defined";
		@return "";
	} @else {
		$color-index: index($color-names, $color-name);

        @if ($current-color-schema == "light") {
            @return nth($light-colors, $color-index);
        } @else {
            @return nth($dark-colors, $color-index);
        }
	}
}
